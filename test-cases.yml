---
#test cases for the requirement "Пользователь должен иметь возможность авторизоваться, в том числе через gitHub или Discord." 
- summary: |
    Проверка входа пользователя с существующими логином и паролем
  requirement: |
    Пользователь должен иметь возможность авторизоваться, в том числе через gitHub или Discord
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    Тестовые данные
    Логин = ilona Пароль = password
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку «Войти»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка возможности авторизации через Discord
  requirement: |
    Пользователь должен иметь возможность авторизоваться, в том числе через gitHub или Discord
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    1. -
  steps:
    - Нажать кнопку "Sign in with Discord"
    - Заполнить форму аутентификации Discord
    - Нажать кнопку "Вход"
    - При необходимости подтвертить адрес электронной почты
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка возможности регистрации через gitHub
  requirement: |
    Пользователь должен иметь возможность авторизоваться, в том числе через gitHub или Discord
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    1. -
  steps:
    - Нажать кнопку "Sign in with gitHub"
    - Заполнить форму аутентификации gitHub
    - Нажать кнопку "Вход"
    - При необходимости подтвертить адрес электронной почты
  expected-result: |
    Пользователь должен попасть на главную страницу

#test cases for the requirement "Пользователь должен иметь возможность зарегистрироваться."
- summary: |
    Проверка возможности регистрации нового аккаунта
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Никнейм = Gamer Емайл = guskovsergey37@gmail.com Пароль = password
  steps:
    - Вводим необходимые тестовые данные
    - Нажимаем кнопку «Submit»
  expected-result: |
    Аккаунт создан
    
- summary: |
    Проверка отображения сообщения "Invalid email"
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Никнейм = Gamer Емайл = почта.gmail,com Пароль = password
  steps:
    - Вводим необходимые тестовые данные
    - Нажимаем кнопку «Submit»
  expected-result: |
    Должно быть выведено сообщение "Invalid email"
    
- summary: |
    Проверка адреса электронной почты на существование
  requirement: |
    На сайте реализована проверка указанного email
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Nickname = "name"
    Email = "user12@mail.ru"
    Password = "password"
  steps:
    - Заполняем все необходимые поля
    - Нажимаем кнопку "Submit"
  expected-result: |
    На почту отправлено подтверждение email

#test cases for the requirement "Пользователь должен иметь возможность создать игру с различными модификаторами."
- summary: |
    Проверка возможности создания игры с ботом
  requirement: |
    Пользователь должен иметь возможность создать игру с различными модификаторами
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Game type = With a bot
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Устанавливаем модификатор игры "Game type" на "With a bot"
    - Выставляем остальные параметры в произвольном порядке
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Игра должна быть создана
    Около ника оппонента должен быть отображен знак бота в виде головы робота

- summary: |
    Проверка возможности создания игры с другом
  requirement: |
    Пользователь должен иметь возможность создать игру с различными модификаторами
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Game type = With a friend
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Устанавливаем модификатор игры "Game type" на "With a friend"
    - В графе "Choose opponent" выбираем желаемого оппонента
    - Выставляем остальные параметры в произвольном порядке
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Должна быть открыта форма батла
    Выбранному игроку должно быть отправлено приглашение

- summary: |
    Проверка возможности создания публичной игры
  requirement: |
    Пользователь должен иметь возможность создать игру с различными модификаторами
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Game type = With other users
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Устанавливаем модификатор игры "Game type" на "With a friend"
    - В графе "Choose opponent" выбираем желаемого оппонента
    - Выставляем остальные параметры в произвольном порядке
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Должна быть открыта форма батла
    На главной форме сайта отображена информация об игре

- summary: |
    Проверка возможности выбора максимального времени игры
  requirement: |
    Пользователь должен иметь возможность создать игру с различными модификаторами
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Time control = 3,60,8
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Устанавливаем модификатор игры "Time control" необходимое значение
    - Выставляем остальные параметры в произвольном порядке
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Должна быть открыта форма батла
    Ограничение по времени равно выбранному

- summary: |
    Проверка возможности выбора уровня сложности игры
  requirement: |
    Пользователь должен иметь возможность создать игру с различными модификаторами
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Level = 1 star, 4 stars, 2 stars
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Устанавливаем модификатор игры "Level" в необходимое значение
    - Выставляем остальные параметры в произвольном порядке
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Должна быть открыта форма батла
    Отображенное перед названием задачи количество звезд должно соответствовать выбранному

#test cases for the requirement  "На сайте должна быть реализована возможность сортировки игр по тегам и уровню сложности."
- summary: |
    Проверка возможности сортировки игр по тегам и уровню сложности
  requirement: |
    На сайте должна быть реализована возможность сортировки игр по тегам и уровню сложности
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Level = 1 star
    Tags = collections & math
  steps:
    - Нажимаем кнопку "CREATE A GAME"
    - Устанавливаем модификатор игры "Level" в необходимое значение
    - Выбираем необходимые теги
    - Выставляем остальные параметры в произвольном порядке
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Количество и состав тем игр в списке изменился

#test cases for the requirement  "Пользователь должен иметь возможность присоединиться к игре."
- summary: |
    Проверка возможности присоединения к публичной игре
  requirement: |
    Пользователь должен иметь возможность присоединиться к игре
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку "Fight", на строчке, выбранного батла
  expected-result: |
    Должна быть открыта форма батла

- summary: |
    Проверка возможности присоединения к уже созданной игре по приглашению
  requirement: |
    Пользователь должен иметь возможность присоединиться к игре
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
    На ваш аккаунт отправлено приглашение в игру
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку в виде "двух скрещенных мечей", на которой отображается колючество имеющихся приглашений
    - Нажимаем кнопку "Accept"
  expected-result: |
    Должна быть открыта форма батла

- summary: |
    Проверка возможности присоединения к уже созданной игре, после покидания формы батла
  requirement: |
    Пользователь должен иметь возможность присоединиться к игре
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
    Пользователь покинул форму еще не окончившегося батла
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку "Continue"
  expected-result: |
    Должна быть открыта форма батла

#test cases for the requirement  "На сайте должна быть реализована возможность одержать победу."    
- summary: |
    Проверка отображения уведомления о победе
  requirement: |
    На сайте должна быть реализована возможность одержать победу
  prerequisites: |
    Открыта форма батла
    Выбрана задача на игру "add_two_tasks"
  test-data: |
    1. Код = const _ = require("lodash");
             const R = require("rambda");
             const solution = (n) => {
             return Math.floor(n / 10) + (n % 10);};
             module.exports = solution;
  steps:
    - Выбираем язык Node.js
    - Вводим код в строенный редактор кода
    - Нажимаем кнопку "Run"
  expected-result: |
    Должно быть отображено сообщение о победе

#test cases for the requirement  "На сайте должна быть реализована возможность проиграть."
- summary: |
    Проверка отображения уведомления о поражении
  requirement: |
    На сайте должно быть отображено уведомление о поражении, в случае поражения
  prerequisites: |
    Открыта форма батла
  test-data: |
    1. -
  steps:
    - Дожидаемся, пока оппонент одержит победу
  expected-result: |
    Должно быть отображено сообщение о поражении

#test cases for the requirement  "На сайте должна быть реализована возможность просмотра статистики игрока."
- summary: |
    Проверка корректного изменения статистики
  requirement: |
    На сайте должна быть реализована возможность просмотра статистики игрока
  prerequisites: |
    Открыта форма батла
    Игра окончена
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем на свой ник
    - В списке нажимаем кнопку "My Profile"
    - Переходим на вкладку "Completed Games"
  expected-result: |
    Общее количество игр "games_played" увеличено на 1
    На круговой диаграмме количество игр на соответствующем игре языке увеличено на 1
    Треугольная диаграмма отображена в соответствии с результатом игры
    В списке игр появилась информация об игре

#test cases for the requirement  "На сайте должна быть реализована возможность сыграть реванш."
- summary: |
    Проверка возможности проведения реванша
  requirement: |
    На сайте должна быть реализована возможность сыграть реванш
  prerequisites: |
    Открыта форма батла
    Игра завершена
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку "Rematch"
  expected-result: |
    Должна быть открыта форма батла, с иной задачей

#test cases for the requirement  "На сайте, в редакторе кода должна быть реализована возможность смены темы."
- summary: |
    Проверка возможности смены темы редактора кода
  requirement: |
    На сайте, в редакторе кода должна быть реализована возможность смены темы
  prerequisites: |
    Открыта форма батла
    Тема редактора кода установлена на "Dark"
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку "Light"
  expected-result: |
    Тема редактора кода должна быть изменена на светлую

#test cases for the requirement  "На сайте должна быть реализована возможность проверки правильности кода, посредством встроенного компилятора."
- summary: |
    Проверка отображения ошибок компиляции кода
  requirement: |
    На сайте должна быть реализована возможность проверки правильности кода, посредством встроенного компилятора
  prerequisites: |
    Открыта форма батла
    Пользователь авторизован
    При создании выбрана задача "add_two_tasks"
  test-data: |
    Код = const _ = require("lodash");
          const R = require("rambda");
          const solution = (n) => {
          return Math.floor(n / 10) + (n % 10);
          module.exports = solution;
  steps:
    - Нажимаем кнопку "Run"
    - Нажимаем кнопку "Output"
  expected-result: |
    В компиляторе должны быть выведены ошибки

- summary: |
    Проверка отображения результата исполнения корректного кода
  requirement: |
    На сайте должна быть реализована возможность проверки правильности кода, посредством встроенного компилятора
  prerequisites: |
    Открыта форма батла
    Пользователь авторизован
    При создании выбрана задача "add_two_tasks"
  test-data: |
    Код = const _ = require("lodash");
          const R = require("rambda");
          const solution = (n) => {
          return Math.floor(n / 10) + (n % 10);};
          module.exports = solution;
  steps:
    - Нажимаем кнопку "Run"
    - Нажимаем кнопку "Output"
  expected-result: |
    В компиляторе должен быть выведен результат выполнения кода

#test cases for the requirement  "На сайте должна быть реализована возможность просмотра истории игр."
- summary: |
    Проверка отображения истории игр
  requirement: |
    На сайте должна быть реализована возможность просмотра истории игр
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку "Completed Games"
  expected-result: |
    Должна быть отображена таблица с историей игр

#test cases for the requirement  "На сайте должна быть реализована возможность просмотра истории турниров."
- summary: |
    Проверка отображения турниров
  requirement: |
    На сайте должна быть реализована возможность просмотра истории турниров
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку "Tournaments"
  expected-result: |
    Должна быть отображена таблица с историей турниров
    Должны быть отображены активные турниры

#test cases for the requirement  "На сайте должен быть реализован чат."
- summary: |
    Проверка возможности отправки сообщений
  requirement: |
    На сайте должен быть реализован чат
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Text = "Всем привет"
  steps:
    - Вводим сообщение Text
    - Нажимаем кнопку "Send"
  expected-result: |
    Сообщение отправлено
    Сообщение должно быть отображено в чате

#test cases for the requirement  "На сайте должна быть реализована возможность отправки приватных сообщений игрокам в сети."    
- summary: |
    Проверка возможности отправки сообщений игрокам в сети
  requirement: |
    На сайте должна быть реализована возможность отправки приватных сообщений игрокам в сети
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Text = "Привет"
  steps:
    - Нажимаем на кнопку "Send message"
    - Выбираем игрока
    - В отобразившемся чате вводим Text
    - Нажимаем кнопку "Send"
  expected-result: |
    Сообщение отправлено
    Сообщение должно быть отображено в чате

#test cases for the requirement  "На сайте должна быть реализована система рейтинга игроков."
- summary: |
    Проверка отображения краткого топа игроков на главной форме, в соответстии с выбранным временным промежутком
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    Period = week, month, all
  steps:
    - Выбираем необходимый временный промежуток
  expected-result: |
    Выведен краткий топ пользователей

- summary: |
    Проверка отображения формы просмотра рейтинга игроков
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем кнопку "Top List"
  expected-result: |
    Открыта форма просмотра рейтинга игроков
    Отображен рейтинг игроков

- summary: |
    Проверка поиска по маске в таблице рейтинга игроков
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта форма рейтинга игроков
    Пользователь авторизован
  test-data: |
    Text = "sergeyTest     "
  steps:
    - Вводим Text в поле поиска
  expected-result: |
    Отображен игрок с ником sergeyTest

- summary: |
    Проверка функции выбора количества отображаемых строк на странице из таблицы рейтинга игроков
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта форма рейтинга игроков
    Пользователь авторизован
  test-data: |
    Users per page = 10,50,30
  steps:
    - В выпадающем списке "Users per page" выбираем необходимое значение
  expected-result: |
    Отображено выбранное количество игроков

- summary: |
    Проверка работоспособности флага "With bots"
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта форма рейтинга игроков
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Устанавливаем флаг "With bots"
  expected-result: |
    Отображен рейтинг игроков включаю ботов

- summary: |
    Проверка возможности сортировки рейтинга игроков по столбу "Rank"
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта форма рейтинга игроков
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем на заголовок столбца "Rank", для выбора необходимого порядка сортировки
  expected-result: |
    Отображен рейтинг игроков отсортированный по столбцу "Rank", в соответствии с выбранным порядком сортировки

- summary: |
    Проверка возможности сортировки рейтинга игроков по столбу "Rating"
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта форма рейтинга игроков
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем на заголовок столбца "Rating", для выбора необходимого порядка сортировки
  expected-result: |
    Отображен рейтинг игроков отсортированный по столбцу "Rating", в соответствии с выбранным порядком сортировки

- summary: |
    Проверка возможности сортировки рейтинга игроков по столбу "Games Played"
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта форма рейтинга игроков
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем на заголовок столбца "Games Played", для выбора необходимого порядка сортировки
  expected-result: |
    Отображен рейтинг игроков отсортированный по столбцу "Games Played", в соответствии с выбранным порядком сортировки

- summary: |
    Проверка возможности сортировки рейтинга игроков по столбу "Joined"
  requirement: |
    На сайте должна быть реализована система рейтинга игроков
  prerequisites: |
    Открыта форма рейтинга игроков
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем на заголовок столбца "Joined", для выбора необходимого порядка сортировки
  expected-result: |
    Отображен рейтинг игроков отсортированный по столбцу "Joined", в соответствии с выбранным порядком сортировки    

#test cases for the requirement  "На сайте должна быть реализована возможность сдачи."
- summary: |
    Проверка возможности сдачи
  requirement: |
    На сайте должна быть реализована возможность сдачи
  prerequisites: |
    Открыта форма батла
  test-data: |
    1. -
  steps:
    - Нажимаем на кнопку "Give up"
    - На всплывающем окне нажимаем кнопку "Give up"
  expected-result: |
    Отображено сообщение о поражении    

#test cases for the requirement  "На сайте должна быть реализована возможность смены языка, на котором представлена задача."
- summary: |
    Проверка возможности смены языка задачи на русский
  requirement: |
    На сайте должна быть реализована возможность смены языка, на котором представлена задача
  prerequisites: |
    Открыта форма батла
    Текст задачи отображен на английском языке
  test-data: |
    1. -
  steps:
    - В списке языков выбираем RU
  expected-result: |
    Текст задачи отображен на русском языке

#test cases for the requirement  "На сайте должна быть реализована возможность смены языка программирования."    
- summary: |
    Проверка возможности смены языка программирования
  requirement: |
    На сайте должна быть реализована возможность смены языка, на котором представлена задача
  prerequisites: |
    Открыта форма батла
    Текст задачи на языке программирование C#
  test-data: |
    1. -
  steps:
    - В списке языко программирования выбираем Node.js
  expected-result: |
    Код в редакторе изменен на код Node.js

#test cases for the requirement  "На сайте должна быть реализована возможность редактирования профиля."    
- summary: |
    На сайте должна быть реализована возможность смены ника
  requirement: |
    На сайте должна быть реализована возможность редактирования профиля
  prerequisites: |
    Открыта форма батла
    Пользователь авторизован
    Игра выиграна
  test-data: |
    1. -
  steps:
    - Нажимаем на свой ник
    - В списке нажимаем кнопку "Settings"
    - В поле "Your name" вводим новый ник
  expected-result: |
    Ник изменен
    
#test cases for the requirement  "Сайт должен быть доступен на различных устройствах."
- summary: |
    Проверка корректного отображения на разных форматах экранов
  requirement: |
    Сайт должен быть доступен на различных устройствах
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Формат монитора = 1366x768, 1920x1080,960x540
  steps:
    - Открываем devtools
    - Нажимаем "Toggle device toolbar"
    - Выбираем формат монитора
  expected-result: |
    Сайт отображен корректно

- summary: |
    Проверка корректного отображения на разных устройствах Mac
  requirement: |
    Сайт должен быть доступен на различных устройствах
  prerequisites: |
    Открыта утилита LambdaTest
  test-data: |
    Формат монитора = 2560x1600, 1440x900
    OC = macOS Ventura, macOS Monterey
    Браузер = Safari 16, Firefox 118
  steps:
    - Переходим на Browser Testing
    - Вводим тестовые данные
    - Нажимаем кнопку Start
  expected-result: |
    Сайт отображен корректно
    Основной функционал работает корректно

#test cases for the requirement  "Сайт должен быть удобным на мобильном устройстве."
- summary: |
    Проверка корректного отображения на мобильных экранах
  requirement: |
    Сайт должен быть удобным на мобильном устройстве
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Форматы экранов = 375x667,768x1024
  steps:
    - Открываем devtools
    - Нажимаем "Toggle device toolbar"
    - Выбираем необходимый формат экрана
  expected-result: |
    Сайт отображен корректно

- summary: |
    Проверка корректного отображения на разных мобильных ОС.
  requirement: |
    Сайт должен быть удобным на мобильном устройстве
  prerequisites: |
    Открыта утилита LambdaTest.
  test-data: |
    Формат экрана = 3120x1440, 2532x1170
    Браузер = Google Chrome,Safari
    ОС = Android 13.0, IOS 16.4
  steps:
    - Переходим на Browser Testing 
    - Вводим тестовые данные
    - Нажимаем кнопку Start
  expected-result: |
    Сайт отображен корректно
    Основной функционал работает корректно

#test cases for the requirement  "На сайте должна быть реализована возможность восстановление пароля."
- summary: |
    Проверка возможности восстановления пароля
  requirement: |
    На сайте должна быть реализована возможность восстановление пароля
  prerequisites: |
    Открыта форма авторизации
  test-data: |
    email =  guskovsergey36@gmail.com
  steps:
    - Нажимаем кнопку "Forgot your password?"
    - В поле "email" вводим адресс электронной почты
    - Нажимаем кнопку "Submit"
    - Переходим на почту
    - Открываем сообщение о сбросе пароля
    - Переходим по ссылке в сообщении
    - Вводим новый пароль
    - Нажимаем кнопку "Save"
    - Возвращаемся на форму авторизации
    - Вводим логин и новый пароль
    - Нажимаем кнопку "Submit"
  expected-result: |
    Вход в аккаунт выполнен

#test cases for the requirement  "Сайт должен быть безопасным и защищать данные пользователя."
- summary: |
    Проверка чата на XSS HTML-разметкой
  requirement: |
    Сайт должен быть безопасным и защищать данные пользователя
  prerequisites: |
    Открыта форма батла
    Пользователь авторизован
  test-data: |
    Text =  <h1>Hello</h1>
  steps:
    - В чат вводим Text
    - Нажимаем кнопку "Send"
  expected-result: |
    Сообщение отображено в чате
    Сайт отображен корректно, без дополнительных элементов

- summary: |
    Проверка чата на XSS кодом на JavaScript
  requirement: |
    Сайт должен быть безопасным и защищать данные пользователя
  prerequisites: |
    Открыта форма батла
    Пользователь авторизован
  test-data: >
    Text =  <script>alert('Я отправил вам скрипт! Пришлите денег,
    пожалуйста :(')</script>
  steps:
    - В чат вводим Text
    - Нажимаем кнопку "Send"
  expected-result: |
    Сообщение отображено в чате
    Сайт отображен корректно, без дополнительных элементов

- summary: |
    Проверка хранения пароля в cookie
  requirement: |
    Сайт должен быть безопасным и защищать данные пользователя
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Переходим в devtools
    - Переходим на вкладку "Application"
    - Раскрываем список cookies
    - Переходим на cookie от codebattle
  expected-result: |
    В отображенном списке отсуствуют пароли

#test cases for the requirement  "На сайте должна быть реализована возможность добавления нового задания."
- summary: |
    Проверка отображения списка заданий
  requirement: |
    На сайте должна быть реализована возможность добавления нового задания
  prerequisites: |
    Открыта главная форма сайта
    Пользователь авторизован
  test-data: |
    1. -
  steps:
    - Нажимаем на свой ник
    - Нажимаем кнопку "Tasks" из списка
  expected-result: |
    Открыта форма, на которой отображен список заданий

- summary: |
    Проверка возможности добавления нового задания
  requirement: |
    На сайте должна быть реализована возможность добавления нового задания
  prerequisites: |
    Открыта форма заданий
    У пользователя отсуствует премиум подписка
    Пользователь авторизован
  test-data: |
    Task name = "rectangular_area"
    Description en="find the area of the rectangle"
    Description ru="найдите площадь прямоугольника"
    Examples = [0,0] -> 0, [2,2] -> 4, [3,3] -> 9
    Код = const _ = require("lodash");
          const R = require("rambda");
          const solution = (width, length) => {
          return width * length;};
          module.exports = solution;
  steps:
    - Заполняем поле названия, описания на русском и английском на шаге 1
    - Добавляем переменные и примеры на шаге 2
    - Заполняем пример решения
    - Нажимаем кнопку тестинг
  expected-result: |
    Получено уведомления об отсутствии премиум подписки
    Все заголовки статуса выполнены
